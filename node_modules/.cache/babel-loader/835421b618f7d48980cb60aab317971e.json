{"ast":null,"code":"import axios from 'axios';\nexport function fetchRecipes() {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`/recipes`); // `/recipes` is enough because the \"root directory\" was specified as '/' in db.js \n      return dispatch({\n        // the action type, along with action.payload, will report to the store, updating the state. \n        type: 'FETCH_RECIPES',\n        // What happened\n        payload: response.data // Additional info\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\n;\nexport function fetchRecipeByName(name) {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`/recipes/?keyword=${name}`);\n      return dispatch({\n        type: \"FETCH_RECIPE_BY_NAME\",\n        payload: response.data\n      });\n    } catch (err) {\n      alert(\"The recipe was not found\");\n    }\n  };\n}\nexport function fetchRecipeDetails(payload) {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`/recipes/${payload}`);\n      return dispatch({\n        type: 'FETCH_RECIPE_DETAILS',\n        payload: response.data\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\nexport function createRecipe(payload) {\n  return async function (dispatch) {\n    try {\n      var response = await axios.post(`/recipe`, payload);\n      return dispatch({\n        type: 'CREATE_RECIPE',\n        payload: response\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\nexport function fetchDiets() {\n  return async function (dispatch) {\n    try {\n      let response = await axios.get(`/diets`); // \n      return dispatch({\n        type: 'FETCH_DIETS',\n        payload: response.data.map(d => d.name) // Will return a new array with the name of each diet\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\nexport function filterByDietType(payload) {\n  return {\n    type: 'FILTER_BY_DIET_TYPE',\n    payload\n  };\n}\n;\nexport function orderByLetter(payload) {\n  return {\n    type: 'ORDER_BY_LETTER',\n    payload\n  };\n}\nexport function orderByHealthScore(payload) {\n  return {\n    type: 'ORDER_BY_HEALTHSCORE',\n    payload\n  };\n}\nexport function clearDetail() {\n  return {\n    type: 'CLEAR_DETAIL'\n  };\n}","map":{"version":3,"names":["axios","fetchRecipes","dispatch","response","get","type","payload","data","err","console","log","fetchRecipeByName","name","alert","fetchRecipeDetails","createRecipe","post","fetchDiets","map","d","filterByDietType","orderByLetter","orderByHealthScore","clearDetail"],"sources":["C:/Users/Pomelo/Desktop/Programacion/Food/Front-End/client/src/redux/actions/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport function fetchRecipes() {\r\n    return async function(dispatch) {\r\n        try{\r\n            const response = await axios.get(`/recipes`);  // `/recipes` is enough because the \"root directory\" was specified as '/' in db.js \r\n            return dispatch({  // the action type, along with action.payload, will report to the store, updating the state. \r\n                type: 'FETCH_RECIPES',  // What happened\r\n                payload: response.data,  // Additional info\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n};\r\nexport function fetchRecipeByName(name) {\r\n    return async function(dispatch) {\r\n        try {\r\n            const response = await axios.get(`/recipes/?keyword=${name}`)\r\n            return dispatch({\r\n                type: \"FETCH_RECIPE_BY_NAME\",\r\n                payload: response.data\r\n            });\r\n        } catch (err) {\r\n            alert(\"The recipe was not found\")\r\n        }\r\n    }\r\n}\r\nexport function fetchRecipeDetails(payload) {\r\n    return async function(dispatch) {\r\n        try {\r\n            const response = await axios.get(`/recipes/${payload}`);\r\n            return dispatch({\r\n                type: 'FETCH_RECIPE_DETAILS',\r\n                payload: response.data\r\n            })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\nexport function createRecipe(payload) {\r\n    return async function(dispatch) {\r\n        try {\r\n            var response = await axios.post(`/recipe`, payload);\r\n            return dispatch({\r\n                type: 'CREATE_RECIPE',\r\n                payload: response,\r\n            })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\nexport function fetchDiets() {\r\n    return async function(dispatch) {\r\n        try {\r\n            let response = await axios.get(`/diets`);  // \r\n            return dispatch({\r\n                type: 'FETCH_DIETS',\r\n                payload: response.data.map(d => d.name)  // Will return a new array with the name of each diet\r\n            })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\nexport function filterByDietType(payload) {\r\n    return {\r\n        type: 'FILTER_BY_DIET_TYPE',\r\n        payload\r\n    }\r\n};\r\nexport function orderByLetter(payload) {\r\n    return {\r\n        type: 'ORDER_BY_LETTER',\r\n        payload\r\n    }\r\n}\r\n\r\nexport function orderByHealthScore(payload) {\r\n    return {\r\n        type: 'ORDER_BY_HEALTHSCORE',\r\n        payload\r\n    }\r\n}\r\n\r\nexport function clearDetail() {\r\n    return {\r\n        type: 'CLEAR_DETAIL'\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}