{"ast":null,"code":"const initialState = {\n  allRecipes: [],\n  shownRecipes: [],\n  recipeDetails: [],\n  diets: []\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'FETCH_RECIPES':\n      return {\n        ...state,\n        shownRecipes: action.payload,\n        // Trough Redux, action.payload communicates with the corresponding react component to display the needed information\n        allRecipes: action.payload\n      };\n    case 'FETCH_RECIPE_BY_NAME':\n      return {\n        ...state,\n        shownRecipes: action.payload\n      };\n    case 'FETCH_RECIPE_DETAILS':\n      return {\n        ...state,\n        recipeDetails: action.payload\n      };\n    case 'CREATE_RECIPE':\n      return {\n        ...state\n      };\n    case 'FETCH_DIETS':\n      return {\n        ...state,\n        diets: action.payload\n      };\n    case 'FILTER_BY_DIET_TYPE':\n      const all = state.allRecipes; // We use the state of allRecipes to filter by diet type, to not grab any kind of recipe, just the corresponding ones\n      const filter = action.payload === 'all' ? all : all.filter(r => r.diets.find(d => d.name === action.payload || d === action.payload)); // Which instruction has been received?\n      return {\n        ...state,\n        shownRecipes: filter\n      };\n    case \"ORDER_BY_HEALTHSCORE\":\n      let sortedByHealthScore = [...state.shownRecipes];\n      sortedByHealthScore = action.payload === 'asc' ? state.shownRecipes.sort(function (a, b) {\n        if (a.healthScore > b.healthScore) return 1;\n        if (a.healthScore < b.healthScore) return -1;\n        return 0;\n      }) : state.shownRecipes.sort(function (a, b) {\n        if (a.healthScore < b.healthScore) return 1;\n        if (a.healthScore > b.healthScore) return -1;\n        return 0;\n      });\n      return {\n        ...state,\n        shownRecipes: sortedByHealthScore\n      };\n    case 'ORDER_BY_LETTER':\n      let orderByLetter = [...state.shownRecipes];\n      orderByLetter = action.payload === 'atoz' ?\n      // Has the instruction been received?\n      state.shownRecipes.sort(function (a, b) {\n        if (a.name.toLowerCase() > b.name.toLowerCase()) return 1; // One case \"a > b === true\"\n        if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n        return 0;\n      }) : state.shownRecipes.sort(function (a, b) {\n        if (a.name.toLowerCase() < b.name.toLowerCase()) return 1; // Other case \"a > b === false\"\n        if (a.name.toLowerCase() > b.name.toLowerCase()) return -1;\n        return 0;\n      });\n      return {\n        ...state,\n        shownRecipes: orderByLetter\n      };\n    case 'CLEAR_DETAIL':\n      return {\n        ...state,\n        recipeDetails: []\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["initialState","allRecipes","shownRecipes","recipeDetails","diets","reducer","state","action","type","payload","all","filter","r","find","d","name","sortedByHealthScore","sort","a","b","healthScore","orderByLetter","toLowerCase"],"sources":["C:/Users/Pomelo/Desktop/Programacion/Food/Front-End/client/src/redux/reducer/index.js"],"sourcesContent":["const initialState = {\r\n    allRecipes: [],\r\n    shownRecipes: [],\r\n    recipeDetails: [],\r\n    diets: [],\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'FETCH_RECIPES':\r\n            return {\r\n                ...state,\r\n                shownRecipes: action.payload,  // Trough Redux, action.payload communicates with the corresponding react component to display the needed information\r\n                allRecipes: action.payload,\r\n            };\r\n        case 'FETCH_RECIPE_BY_NAME':\r\n            return {\r\n                ...state,\r\n                shownRecipes: action.payload,\r\n            };\r\n        case 'FETCH_RECIPE_DETAILS':\r\n            return {\r\n                ...state,\r\n                recipeDetails: action.payload,\r\n            };\r\n        case 'CREATE_RECIPE':\r\n            return {\r\n                ...state,\r\n            };\r\n        case 'FETCH_DIETS':\r\n            return {\r\n                ...state,\r\n                diets: action.payload,\r\n            };\r\n        case 'FILTER_BY_DIET_TYPE': \r\n            const all = state.allRecipes;  // We use the state of allRecipes to filter by diet type, to not grab any kind of recipe, just the corresponding ones\r\n            const filter = action.payload === 'all' ? all : all.filter(r => r.diets.find(d => d.name === action.payload || d === action.payload));  // Which instruction has been received?\r\n            return {\r\n                ...state,\r\n                shownRecipes: filter\r\n            }\r\n        case \"ORDER_BY_HEALTHSCORE\":\r\n            let sortedByHealthScore = [...state.shownRecipes];\r\n            sortedByHealthScore = action.payload === 'asc' ?\r\n                state.shownRecipes.sort(function (a, b) {\r\n                    if (a.healthScore > b.healthScore) return 1;\r\n                    if (a.healthScore < b.healthScore) return -1;\r\n                    return 0;\r\n                }) :\r\n                state.shownRecipes.sort(function (a, b) {\r\n                    if (a.healthScore < b.healthScore) return 1;\r\n                    if (a.healthScore > b.healthScore) return -1;\r\n                    return 0;\r\n                });\r\n            return {\r\n                ...state,\r\n                shownRecipes: sortedByHealthScore,\r\n            };\r\n        case 'ORDER_BY_LETTER': \r\n            let orderByLetter = [...state.shownRecipes];\r\n            orderByLetter = action.payload === 'atoz' ?  // Has the instruction been received?\r\n                state.shownRecipes.sort(function (a, b) {\r\n                    if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;  // One case \"a > b === true\"\r\n                    if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\r\n                    return 0;\r\n                }) :\r\n                state.shownRecipes.sort(function (a, b) {\r\n                    if (a.name.toLowerCase() < b.name.toLowerCase()) return 1;  // Other case \"a > b === false\"\r\n                    if (a.name.toLowerCase() > b.name.toLowerCase()) return -1;\r\n                    return 0\r\n                });\r\n            return {\r\n                ...state,\r\n                shownRecipes: orderByLetter,\r\n            }\r\n        case 'CLEAR_DETAIL':\r\n            return {\r\n                ...state,\r\n                recipeDetails: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}